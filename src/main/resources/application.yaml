server:
  port: 8080
  servlet:
    context-path: /permitteringsskjema-api
info:
  app:
    version: '@project.version@'
    build:
      time: '@timestamp@'
management:
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
      base-path: /internal/actuator
  endpoint:
    health:
      show-details: never
spring:
  main.banner-mode: "off"
  jpa.open-in-view: false
  profiles.active: prod-gcp
  jackson:
    default-property-inclusion: non-absent
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      max.poll.interval.ms: 60000
      auto.offset.reset: earliest
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          type: PKCS12
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
nais.cluster.name: ${NAIS_CLUSTER_NAME:local}

permittering:
  database:
    url: "jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}"
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

permittering-dokgen.baseUrl: "http://permittering-dokgen"

nais:
  token.endpoint: ${NAIS_TOKEN_ENDPOINT}

azuread:
    aadAccessTokenURL: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    clientid: ${AZURE_APP_CLIENT_ID}
    azureClientSecret: ${AZURE_APP_CLIENT_SECRET}

token.x:
  privateJwk: ${TOKEN_X_PRIVATE_JWK:}
  clientId: ${TOKEN_X_CLIENT_ID:}
  tokenEndpoint: ${TOKEN_X_TOKEN_ENDPOINT:}
  issuer: ${TOKEN_X_ISSUER:}

no.nav.security.jwt.issuer:
  tokenx:
    discoveryurl: ${TOKEN_X_WELL_KNOWN_URL:}
    accepted_audience: ${TOKEN_X_CLIENT_ID:}

---

spring:
  config:
    activate:
      on-profile: dev-gcp
  flyway:
    locations: classpath:/db/migration, classpath:/db/privileges

ereg-services.baseUrl: "https://ereg-services.dev-fss-pub.nais.io"
norg2.baseUrl: "https://norg2.dev-fss-pub.nais.io"
dokarkiv:
  scope: "api://dev-fss.teamdokumenthandtering.dokarkiv-q1/.default"
  baseUrl: "https://dokarkiv.dev-fss-pub.nais.io/rest/journalpostapi/v1"

oppgave:
  baseUrl: "https://oppgave-q1.dev-fss-pub.nais.io"
  scope: "api://dev-fss.oppgavehandtering.oppgave-q1/.default"

---

spring:
  config:
    activate:
      on-profile: prod-gcp
  flyway:
    locations: classpath:/db/migration, classpath:/db/privileges

ereg-services.baseUrl: "https://ereg-services.prod-fss-pub.nais.io"
norg2.baseUrl: "https://norg2.prod-fss-pub.nais.io"
dokarkiv:
  scope: "api://prod-fss.teamdokumenthandtering.dokarkiv/.default"
  baseUrl: "https://dokarkiv.prod-fss-pub.nais.io/rest/journalpostapi/v1"

oppgave:
  baseUrl: "https://oppgave.prod-fss-pub.nais.io"
  scope: "api://prod-fss.oppgavehandtering.oppgave/.default"

