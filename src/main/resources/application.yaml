server:
  port: 8080
  servlet:
    context-path: /permitteringsskjema-api
info:
  app:
    version: '@project.version@'
    build:
      time: '@timestamp@'
management:
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
      base-path: /internal/actuator
  endpoint:
    health:
      show-details: never
spring:
  jackson:
    default-property-inclusion: non-absent
  kafka:
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${systembruker.username} password=${systembruker.password};
    consumer:
      enable-auto-commit: false
      bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer


permittering:
  arbeidsgiver:
    enabled: true
    topic: arbeidsgiver.aapen-permittering-arbeidsgiver
  database:
    database-navn: permittering
    database-url: ${spring.datasource.url}
    minimum-idle: 1
    maximum-pool-size: 8
    max-lifetime: 300000

kafka:
  keystore.path: ${KAFKA_KEYSTORE_PATH:/dev/zero}
  truststore.path: ${KAFKA_TRUSTSTORE_PATH:/dev/zero}
  credstore.password: ${KAFKA_CREDSTORE_PASSWORD:pwd}

